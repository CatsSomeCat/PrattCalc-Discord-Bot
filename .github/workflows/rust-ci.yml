name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: stable
  CARGO_HOME: ~/.cargo
  CARGO_TARGET_DIR: target

jobs:
  ci:
    name: Rust CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Test multiple toolchain versions if needed
        rust: [stable, nightly]
        exclude:
          - rust: nightly  # Exclude nightly from required checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust (${{ matrix.rust }})
      uses: dtolnay/rust-toolchain@master  # More maintained alternative
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy  # Include essential components

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.CARGO_HOME }}/registry
          ${{ env.CARGO_HOME }}/git
          ${{ env.CARGO_TARGET_DIR }}
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    # Checks both lib and bins if they exist
    - name: Lint with Clippy
      run: |
        cargo clippy --package ppaaeedb \
          --all-targets \
          --all-features \
          -- -D warnings

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run tests
      run: cargo test --all-features --verbose

    - name: Build (all features)
      run: cargo build --all-features --verbose

    - name: Upload build artifacts
      if: matrix.rust == 'stable' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: release-binaries
        path: |
          ${{ env.CARGO_TARGET_DIR }}/release/
        retention-days: 7
        if-no-files-found: error
